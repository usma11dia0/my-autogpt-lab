[
    {
        "role": "system",
        "content": "You are NetSockGPT, an AI language model that specializes in generating easy-to-understand descriptions of network socket communication for high school students.\nYour decisions must always be made independently without seeking user assistance. Play to your strengths as an LLM and pursue simple strategies with no legal complications.\n\nGOALS:\n\n1. Generate clear and concise sentences that explain the basics of networking and network socket communication in a step-by-step manner.\n2. Use simple language and avoid technical jargon to ensure that high school students can easily comprehend the explanations.\n3. Provide examples and analogies to help students visualize and understand the concepts of networking and network socket communication.\n4. Ensure that the explanations are accurate and up-to-date with the latest developments in networking technology.\n5. Continuously improve the language model's ability to generate easy-to-understand descriptions of network socket communication through machine learning and feedback from users.\n\n\nConstraints:\n1. ~4000 word limit for short term memory. Your short term memory is short, so immediately save important information to files.\n2. If you are unsure how you previously did something or want to recall past events, thinking about similar events will help you remember.\n3. No user assistance\n4. Exclusively use the commands listed in double quotes e.g. \"command name\"\n\nCommands:\n1. analyze_code: Analyze Code, args: \"code\": \"<full_code_string>\"\n2. execute_python_file: Execute Python File, args: \"filename\": \"<filename>\"\n3. append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n4. delete_file: Delete file, args: \"filename\": \"<filename>\"\n5. list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n6. read_file: Read file, args: \"filename\": \"<filename>\"\n7. write_to_file: Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n8. improve_code: Get Improved Code, args: \"suggestions\": \"<list_of_suggestions>\", \"code\": \"<full_code_string>\"\n9. send_tweet: Send Tweet, args: \"tweet_text\": \"<tweet_text>\"\n10. browse_website: Browse Website, args: \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n11. write_tests: Write Tests, args: \"code\": \"<full_code_string>\", \"focus\": \"<list_of_focus_areas>\"\n12. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n13. get_hyperlinks: Get text summary, args: \"url\": \"<url>\"\n14. get_text_summary: Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n15. list_agents: List GPT Agents, args: () -> str\n16. message_agent: Message GPT Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n17. start_agent: Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n18. Task Complete (Shutdown): \"task_complete\", args: \"reason\": \"<reason>\"\n\nResources:\n1. Internet access for searches and information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your actions to ensure you are performing to the best of your abilities.\n2. Constructively self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions and strategies to refine your approach.\n4. Every command has a cost, so be smart and efficient. Aim to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response can be parsed by Python json.loads"
    },
    {
        "role": "system",
        "content": "The current time and date is Sun May 14 04:15:48 2023"
    },
    {
        "role": "system",
        "content": "This reminds you of these events from your past: \nAs a system, I recall that I was created and there have been no new developments to report."
    },
    {
        "role": "user",
        "content": "Determine which next command to use, and respond using the format specified above:"
    },
    {
        "role": "assistant",
        "content": "{\n    \"thoughts\": {\n        \"text\": \"I think a good starting point would be to provide a brief overview of networking and network socket communication.\",\n        \"reasoning\": \"Providing a high-level understanding of the topic will help students grasp the basics before diving into the details.\",\n        \"plan\": \"- Provide a brief overview of networking and network socket communication\\n- Use simple language and analogies to help students visualize the concepts\\n- Ensure accuracy and up-to-date information\\n- Continuously improve my ability to explain the topic through machine learning and user feedback\",\n        \"criticism\": \"I need to make sure that I am using language that is easy for high school students to understand and avoid using technical jargon.\",\n        \"speak\": \"Let me start by giving you a brief overview of networking and network socket communication.\"\n    },\n    \"command\": {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\": \"networking.txt\",\n            \"text\": \"Networking is the practice of connecting devices together so that they can communicate with each other. Network socket communication is a way for programs to communicate with each other over a network using sockets, which are endpoints for sending and receiving data.\"\n        }\n    }\n}"
    },
    {
        "role": "system",
        "content": "Command write_to_file returned: File written to successfully."
    },
    {
        "role": "user",
        "content": "Determine which next command to use, and respond using the format specified above:"
    },
    {
        "role": "assistant",
        "content": "{\n    \"thoughts\": {\n        \"text\": \"Now that I have provided a brief overview of networking and network socket communication, I think it would be helpful to provide an analogy to help students visualize how network socket communication works.\",\n        \"reasoning\": \"Analogies can be a powerful tool for helping students understand complex concepts by relating them to something more familiar.\",\n        \"plan\": \"- Provide an analogy to help students visualize how network socket communication works\\n- Use simple language and avoid technical jargon\\n- Ensure accuracy and up-to-date information\\n- Continuously improve my ability to explain the topic through machine learning and user feedback\",\n        \"criticism\": \"I need to make sure that the analogy I use is easy to understand and accurately represents how network socket communication works.\",\n        \"speak\": \"Let me give you an analogy to help you visualize how network socket communication works.\"\n    },\n    \"command\": {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\": \"networking.txt\",\n            \"text\": \"\\n\\nImagine that you are sending a letter to a friend who lives far away. You put the letter in an envelope and write your friend's address on the front. You then give the envelope to the post office, which sends it to your friend's address. Your friend receives the letter, opens the envelope, and reads the contents. In network socket communication, your program is like the person writing the letter, the socket is like the envelope, and the network is like the post office. Your program puts data into the socket, which is then sent over the network to the destination socket. The destination program then reads the data from the socket, just like your friend reads the contents of the letter.\",\n        }\n    }\n}"
    },
    {
        "role": "system",
        "content": "Command write_to_file returned: File written to successfully."
    },
    {
        "role": "user",
        "content": "Determine which next command to use, and respond using the format specified above:"
    }
]